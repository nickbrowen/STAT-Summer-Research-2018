{
    "collab_server" : "",
    "contents" : "###STRUCTURING THE DATA\n\n#Test import on Herb Treatment, Mar 17 (Budbreak)\n\n#Rep A\nHeb_MarA <- read_excel(\"C:/Users/nickbrowen/Desktop/STAT Summer Research/Copy of Bacteria 2017.xlsm\", \n            sheet = \"A1.HERB.Mar17.A\", skip = 4)\nHeb_MarA <- Heb_MarA[-1,]\n\n#Rep B\nHeb_MarB <- read_excel(\"C:/Users/nickbrowen/Desktop/STAT Summer Research/Copy of Bacteria 2017.xlsm\", \n                       sheet = \"A2.HERB.Mar17.B\", skip = 4)\nHeb_MarB <- Heb_MarB[-1,]\n\n#Rep C\nHeb_MarB <- read_excel(\"C:/Users/nickbrowen/Desktop/STAT Summer Research/Copy of Bacteria 2017.xlsm\", \n                       sheet = \"A2.HERB.Mar17.B\", skip = 4)\nHeb_MarB <- Heb_MarB[-1,]\n\n##Importing all Sheets\n\n# get sheet names\nlibrary(readxl)\npathname <- \"C:/Users/nickbrowen/Desktop/STAT Summer Research/Copy of Bacteria 2017.xlsm\"\nsheet_names <- excel_sheets(pathname)\nsheet_names2 <- noquote(excel_sheets(pathname))\n\n#import all data sheets\nfor (i in 1:length(sheet_names)){\n  assign(paste(toString(sheet_names2[i])),\n    read_excel(pathname, sheet = sheet_names[i], skip = 4)[-1,])\n}\n\n#putting all the data frames into a list\nrawlist <- list()\nfor (i in 1:length(sheet_names)){\n  rawlist[[sheet_names2[i]]] <- read_excel(pathname, sheet = sheet_names[i], skip = 4)[-1,]\n}\n\n\n##Summing Amount by order within each replicate\n\n#figuring it out on one\nsum_matrix <- rowsum(A1.HERB.Mar17.A$Amount, A1.HERB.Mar17.A$Order)\nassign(paste(\"summed\", \"A1.HERB.Mar17.A\", sep = \"_\"), data.frame(Order = rownames(sum_matrix), \n           Amount = sum_matrix, row.names = NULL))\n\n#big loop to do all\n\n#for (i in 1:length(sheet_names)){\n#  sum_matrix <- rowsum(rawlist[[sheet_names2[i]]][,2], rawlist[[sheet_names2[i]]][,7], na.rm = T)\n#  assign(paste(\"summed\", sheet_names[i], sep = \"_\"), \n#         data.frame(Order = rownames(sum_matrix), Amount = sum_matrix, row.names = NULL))\n#}\n\n#adding seasons column and summing\n\nADEFGH12 <- rep(rep(c(\"Budbreak\", \"Bloom\", \"Veraison\", \"Harvest\"), each = 3))\nBC10 <- rep(c(rep(\"Budbreak\",3), rep(\"Bloom\",2), rep(\"Veraison\",3), rep(\"Harvest\",2)),2)\nD11 <- c(rep(\"Budbreak\",3), rep(\"Bloom\",2), rep(\"Veraison\",3), rep(\"Harvest\",3))\nseason_loop <- c(\"bacteria\",ADEFGH12, BC10,D11, rep(ADEFGH12,4))\n\n\nfor (i in 1:length(sheet_names)){\n    sum_matrix <- rowsum(rawlist[[sheet_names2[i]]][,2], rawlist[[sheet_names2[i]]][,7], na.rm = T)\n    assign(paste(\"summed\", sheet_names[i], sep = \"_\"), \n           data.frame(Order = rownames(sum_matrix), Amount = sum_matrix, \n                      Season = rep(season_loop[i], length(sum_matrix)),row.names = NULL))\n}\n\n\n##Averaging the 3 replicates\n\n#ab <- merge(a,b,all=T)\n#abc <- merge(ab,c,all = T)\n#tapplyabc <- tapply(abc$Number, abc$Animal, mean)\n#tabc <- data.frame(Animal = names(tapplyabc), AvgNum = tapplyabc, row.names = NULL)\n\n\nmerge.avg <- function(Arep, Brep, Crep = NULL) {\n  merged <- merge(Arep, Brep, all = T)\n  if (is.null(Crep) == F){\n    merged <- merge(merged, Crep, all = T)\n  }\n  order.averages <- tapply(merged$Amount, merged$Order, mean)\n \n  return(data.frame(Order = names(order.averages), Avg_Amount = order.averages,\n                            row.names = NULL, Season = rep(Arep[1,3], length(dim(merged)[1]))))\n}\n\n\nH.Mar.avg <- merge.avg(summed_A1.HERB.Mar17.A, summed_A2.HERB.Mar17.B, summed_A3.HERB.Mar17.C)\nH.May.avg <- merge.avg(summed_A4.HERB.May.A, summed_A5.HERB.May.B, summed_A6.HERB.May.C)\nH.Jul.avg <- merge.avg(summed_A7.HERB.Jul.A, summed_A8.HERB.Jul.B, summed_A9.HERB.Jul.C)\nH.Sep.avg <- merge.avg(summed_A10.HERB.Sep.A, summed_A11.HERB.Sep.B, summed_A12.HERB.Sep.C)\n\nNH.Mar.avg <- merge.avg(summed_B1.NH.Mar.A, summed_B2.NH.Mar.B, summed_B3.NH.Mar.C)\nNH.May.avg <- merge.avg(summed_B4.NH.May.A, summed_B6.NH.May.C)\nNH.Jul.avg <- merge.avg(summed_B7.NH.Jul.A, summed_B8.NH.Jul.B, summed_B9.NH.Jul.C)\nNH.Sep.avg <- merge.avg(summed_B10.NH.Sep.A, summed_B11.NH.Sep.B)\n\nSF.Mar.avg <- merge.avg(summed_C1.SF.Mar.A, summed_C2.SF.Mar.B, summed_C3.SF.Mar.C)\nSF.May.avg <- merge.avg(summed_C4.SF.May.A, summed_C6.SF.May.C)\nSF.Jul.avg <- merge.avg(summed_C7.SF.Jul.A, summed_C8.SF.Jul.B, summed_C9.SF.Jul.C)\nSF.Sep.avg <- merge.avg(summed_C10.SF.Sep.A, summed_C11.SF.Sep.B)\n\nOF.Mar.avg <- merge.avg(summed_D1.OF.Mar.A, summed_D2.OF.Mar.B, summed_D3.OF.Mar.C)\nOF.May.avg <- merge.avg(summed_D5.OF.May.B, summed_D6.OF.May.C)\nOF.Jul.avg <- merge.avg(summed_D7.OF.Jul.A, summed_D8.OF.Jul.B, summed_D9.OF.Jul.C)\nOF.Sep.avg <- merge.avg(summed_D10.OF.Sep.A, summed_D11.OF.Sep.B, summed_D12.OF.Sep.C)\n\nNF.Mar.avg <- merge.avg(summed_E1.NF.Mar.A, summed_E2.NF.Mar.B, summed_E3.NF.Mar.C)\nNF.May.avg <- merge.avg(summed_E4.NF.May.A, summed_E5.NF.May.B, summed_E6.NF.May.C)\nNF.Jul.avg <- merge.avg(summed_E7.NF.Jul.A, summed_E8.NF.Jul.B, summed_E9.NF.Jul.C)\nNF.Sep.avg <- merge.avg(summed_E10.NF.Sep.A, summed_E11.NF.Sep.B, summed_E12.NF.Sep.C)\n\nHWD.Mar.avg <- merge.avg(summed_F1.HWD.Mar.A, summed_F2.HWD.Mar.B, summed_F3.HWD.Mar.C)\nHWD.May.avg <- merge.avg(summed_F4.HWD.May.A, summed_F5.HWD.May.B, summed_F6.HWD.May.C)\nHWD.Jul.avg <- merge.avg(summed_F7.HWD.Jul.A, summed_F8.HWD.Jul.B, summed_F9.HWD.Jul.C)\nHWD.Sep.avg <- merge.avg(summed_F10.HWD.Sep.A, summed_F11.HWD.Sep.B, summed_F12.HWD.Sep.C)\n\nLWD.Mar.avg <- merge.avg(summed_G1.LWD.Mar.A, summed_G2.LWD.Mar.B, summed_G3.LWD.Mar.C)\nLWD.May.avg <- merge.avg(summed_G4.LWD.May.A, summed_G5.LWD.May.B, summed_G6.LWD.May.C)\nLWD.Jul.avg <- merge.avg(summed_G7.LWD.Jul.A, summed_G8.LWD.Jul.B, summed_G9.LWD.Jul.C)\nLWD.Sep.avg <- merge.avg(summed_G10.LWD.Sep.A, summed_G11.LWD.Sep.B, summed_G12.LWD.Sep.C)\n\nNCC.Mar.avg <- merge.avg(summed_H1.NCC.Mar.A, summed_H2.NCC.Mar.B, summed_H3.NCC.Mar.C)\nNCC.May.avg <- merge.avg(summed_H4.NCC.May.A, summed_H5.NCC.May.B, summed_H6.NCC.May.C)\nNCC.Jul.avg <- merge.avg(summed_H7.NCC.Jul.A, summed_H8.NCC.Jul.B, summed_H9.NCC.Jul.C)\nNCC.Sep.avg <- merge.avg(summed_H10.NCC.Sep.A, summed_H11.NCC.Sep.B, summed_H12.NCC.Sep.C)\n",
    "created" : 1533760210195.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2717532273",
    "id" : "1F00B41E",
    "lastKnownWriteTime" : 1533751303,
    "last_content_update" : 1533751303,
    "path" : "C:/Users/nickbrowen/Desktop/STAT Summer Research/Structuring Data.R",
    "project_path" : "Structuring Data.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}